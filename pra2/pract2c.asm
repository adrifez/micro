;_______________________________________________________________
; Autores: Adrián Fernández Amador
;          Aitor Arnaiz del Val
;
; Pareja: 11
;_______________________________________________________________

;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE DATOS
DATOS SEGMENT
	ESCRIBE DB "Introduzca un numero (0-15): $"
	ERRORNUM DB "No introdujo un numero de 0 a 15, ERROR $"
	NUM DB 80 DUP (0)
DATOS ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE PILA
PILA SEGMENT STACK "STACK"
	DB 40H DUP (0)
PILA ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO EXTRA 
EXTRA SEGMENT 
	DECIMAL DB 16 DUP (0)
EXTRA ENDS 
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE CODIGO
CODE SEGMENT
ASSUME CS:CODE,DS:DATOS,ES:EXTRA,SS:PILA
;_______________________________________________________________
; COMIENZO DEL PROCEDIMIENTO PRINCIPAL (START)
START PROC
	;INICIALIZA LOS REGISTROS DE SEGMENTO CON SUS VALORES 
	MOV AX, DATOS 
	MOV DS, AX 

	MOV AX, EXTRA 
	MOV ES, AX 

	MOV AX, PILA 
	MOV SS, AX 
	;FIN DE LAS INICIALIZACIONES

	;COMIENZO DEL PROGRAMA
	
	MOV SI, 0
	;PIDO QUE SE INTRODUZCA UN NUMERO
	MOV AH, 9
	MOV DX, OFFSET ESCRIBE
	INT 21H
	
	MOV AH,0AH			;ALMACENA EL NUMERO TECLEADO
	MOV DX,OFFSET NUM
	
	;CONTROL DE ERRORES (VEMOS QUE EL NUMERO TENGA 2 CIFRAS COMO MAXIMO)
	MOV CL, NUM[1]
	CMP CL, 2
	JG ERROR1
	JE DOSCIFRAS
	
	CMP CL, 0
	JE ERROR1 
	
	JMP NORMALUNA

DOSCIFRAS: MOV CL, NUM[2]
	CMP CL, 1
	JNE ERROR1
	JE NORMALDOS
	
	;FIN DEL CONTROL DE ERRORES
	
	;EJECUCION NORMAL DEL PROGRAMA CON UNA CIFRA
NORMALUNA: MOV CL, NUM[2]
	SUB CL, 48
	MOV DECIMAL[SI], CL
	
	
	JMP FIN
	
	;EJECUCION NORMAL DEL PROGRAMA CON DOS CIFRAS
NORMALDOS: MOV CL, NUM[2]
	SUB CL, 48
	MOV DECIMAL[SI], CL
	INC SI
	
	
	JMP FIN

	MOV CL, NUM[3]
	SUB CL, 48
	MOV DECIMAL[SI], CL
	
	
ERROR1: MOV DX, OFFSET ERRORNUM
	MOV AH,9
	MOV DX, OFFSET ERRORNUM
	INT 21H 	
	
	;FIN DEL PROGRAMA 
	
FIN: MOV AX, 4C00H
	INT 21H
	
START ENDP
;FIN DEL SEGMENTO DE CODIGO
CODE ENDS
;FIN DE PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION
END START