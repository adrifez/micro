_pract3a SEGMENT BYTE PUBLIC 'CODE'
ASSUME CS: _pract3a
PUBLIC _comprobarNumeroSecreto, _rellenarIntento
; --------------------------------
; COMIENZO DE PRIMERA RUTINA
_comprobarNumeroSecreto PROC FAR
	; GUARDAMOS EN LA PILA
	PUSH BP
	MOV BP, SP
	PUSH ES
	PUSH SI
	PUSH BX
	PUSH CX
	
	; OBTENEMOS LOS ARGUMENTOS DE LA PILA
	MOV SI, [BP + 6]
	MOV ES, [BP + 8]
	
	; CARGAMOS LOS DATOS
	MOV BX, ES:[SI]
	MOV CX, ES:[SI + 2]
	
	; COMPARAMOS
	CMP BL, BH
	JE COINCIDE
	CMP BL, CL
	JE COINCIDE
	CMP BL, CH
	JE COINCIDE
	CMP BH, CL
	JE COINCIDE
	CMP BH, CH
	JE COINCIDE
	CMP CL, CH
	JE COINCIDE
	; SI NO COINCIDE NINGUN DIGITO DEVOLVEMOS 0
	MOV AX, 0H
	JMP FIN
	
; SI ALGUN DIGITO COINCIDE DEVOLVEMOS 1
COINCIDE: MOV AX, 1H

; SACAMOS DE LA PILA
FIN: POP CX
	POP BX
	POP SI
	POP ES
	POP BP
	RET
_comprobarNumeroSecreto ENDP
; FINAL PRIMERA RUTINA

; --------------------------------
; COMIENZO DE SEGUNDA RUTINA
_rellenarIntento PROC FAR
	; GUARDAMOS EN LA PILA
	PUSH BP
	MOV BP, SP
	PUSH ES
	PUSH SI
	PUSH BX
	PUSH DX
	
	; OBTENEMOS LOS ARGUMENTOS DE LA PILA
	MOV DX, 0H
	MOV AX, [BP + 6]
	
	MOV SI, [BP + 8]
	MOV ES, [BP + 10]
	
	;METEMOS CEROS EN LA ZONA DE MEMORIA DE INTENTODIGITOS
	MOV ES:[0], DX
	MOV ES:[2], DX
	
	; DIVIDIMOS ENTRE 10
	MOV BX, 10
	ADD SI, 3
dividir: DIV BX
	; GUARDAMOS EN LA PILA
	MOV ES:[SI], DL
	MOV DX, 0H
	SUB SI, 1
	; PARAMOS CUANDO EL COCIENTE ES 0
	CMP AX, 0H
	JNE dividir
	
	; SACAMOS DE LA PILA
	POP DX
	POP BX
	POP SI
	POP ES
	POP BP
	RET
_rellenarIntento ENDP
; FINAL SEGUNDA RUTINA 
_pract3a ENDS
END